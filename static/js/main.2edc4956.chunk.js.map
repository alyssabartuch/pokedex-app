{"version":3,"sources":["components/PokemonCard.js","components/PokemonList.js","components/GenderRatio.js","components/SpeciesProfile.js","components/EvolutionChain.js","components/Genus.js","components/EggGroup.js","components/Stats.js","components/Types.js","components/Moves.js","components/Damage.js","components/Pokeball.js","components/PokemonDetail.js","App.js","serviceWorker.js","index.js"],"names":["PokemonCard","pokemonInfo","onRouteChange","onPokemonDetail","name","id","url","trim","split","className","onClick","pokemon","handleClick","src","alt","PokemonList","pokemonList","map","i","key","GenderRatio","genderInfo","genderRatio","rate","male","female","getRatio","SpeciesProfile","speciesInfo","height","weight","base_experience","toFixed","capture_rate","base_happiness","color","EvolutionProfile","evolutionChain","evolution","undefined","push","chain","species","evolves_to","Genus","flavorText","flavor_text_entries","find","o","version","language","flavor_text","genera","genus","EggGroup","egg_groups","eggGroup","Stats","stats","stat","base_stat","Types","types","type","Moves","moves","version_group_details","move_learn_method","move","Damage","Pokeball","viewBox","width","transform","fill","stroke","strokeWidth","strokeLinejoin","strokeLinecap","d","strokeDasharray","cx","cy","r","opacity","PokemonDetail","getSpeciesInfo","a","fetch","state","speciesResponse","json","speciesJson","setState","getGenderInfo","femaleResponse","femaleJson","gender","pokemon_species_details","pokemon_species","maleResponse","maleJson","genderlessResponse","genderlessJson","getEvolutionChainInfo","evolution_chain","evoChainResponse","evoChainJson","getDamageInfo","damageUrls","forEach","this","Promise","all","then","damageResponse","damageResults","damage","isLoading","catch","err","console","log","abilities","props","pokemonDetail","detailResponse","detailJson","EvolutionChain","Component","App","getPokemonList","response","results","getPokemonInfo","data","route","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.2edc4956.chunk.js","sourcesContent":["import React from 'react';\nimport '../App.css';\n\nconst PokemonCard = ({ pokemonInfo, onRouteChange, onPokemonDetail }) => {\n\n    const { name, url } = pokemonInfo\n    const id = url.trim().split('/')[6]\n\n    const handleClick = () => {\n        const pokemon = {\n            id: id,\n            name: pokemonInfo.name,\n            url: pokemonInfo.url\n        }\n        \n        onPokemonDetail(pokemon)\n        onRouteChange('detail')\n\n    }\n\n    return (\n        <div className=\"tc w4 bg-lightest-blue dib br2 pa1 ma2 grow bw2 shadow-5\" onClick={() => handleClick()}>\n            <img src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${id}.png`} alt={name}></img>\n            <h3 className=\"ttc\">{name}</h3>\n            \n        </div>\n    )\n    \n}\n\nexport default PokemonCard;\n\n\n","import React from 'react';\nimport PokemonCard from './PokemonCard';\n\nconst PokemonList = ({pokemonList, onRouteChange, onPokemonDetail }) => {\n    \n    return (\n        <div>\n            {\n                pokemonList.map((pokemon, i) => {\n                    return ( \n                        <PokemonCard \n                            pokemonInfo={pokemonList[i]} \n                            key={i}\n                            onRouteChange={onRouteChange}\n                            onPokemonDetail={onPokemonDetail} />\n                    );\n                })\n            }\n\n\n        </div>\n    )\n}\n\n\n\nexport default PokemonList;","import React from 'react';\nimport '../App.css';\n\nconst GenderRatio = ({ genderInfo, name }) => {\n\n    const getRatio = () => {\n        \n        switch(genderInfo.rate) {\n            case -1: \n                return { male: '0%', female: '0%'}\n            case 0: \n                return { male: '100%', female: '0%' }\n            case 1:\n                return { male: '87.5%', female: '12.5%' }\n            case 2: \n                return { male: '75%', female: '25%'}\n            case 4:\n                return { male: '50%', female: '50%' }\n            case 6:\n                return { male: '25%', female: '75%' }\n            case 7: \n                return { male: '12.5%', female: '87.5%' }\n            case 8:\n                return { male: '0%', female: '100%' }\n            default:\n                return { male: '0%', female: '0%' }\n        }\n    }\n    \n    const genderRatio = getRatio()\n\n    return (\n        <div id=\"gender\">\n            <h3 className=\"mt3 mb1\">Gender Ratio:</h3>\n                    <div className=\"list pl0 ma0\">\n                        <p className=\"ma0\">{genderRatio.male} <span className=\"male-symbol\">♂</span></p>\n                        <p className=\"ma0\">{genderRatio.female} <span className=\"female-symbol\">♀</span></p>\n                        \n                    </div>\n        </div>\n    )\n    \n}\n\nexport default GenderRatio;\n","import React from 'react';\n\nconst SpeciesProfile = ({speciesInfo, height, weight, base_experience }) => {\n\n    return (\n        <div id=\"profile\">\n            <h3 className=\"mt3 mb1\">Profile:</h3>\n                <ul className=\"list pl0 ma0\">\n                    <li>Height: {(height * .1).toFixed(1)} m</li>\n                    <li>Weight: {(weight * .1).toFixed(1)} kg</li>\n                    <li>Capture Rate: {((speciesInfo.capture_rate / 255) * 100).toFixed(0)}%</li>\n                    <li>Base Exp: {base_experience}</li>\n                    <li>Base Happiness: {speciesInfo.base_happiness}</li>\n                    <li>Color: {speciesInfo.color.name}</li>\n                </ul>\n        </div>\n        \n    )\n}\n\nexport default SpeciesProfile;","import React from 'react';\n\nconst EvolutionProfile = ({evolutionChain}) => {\n    \n    const evolution = []\n\n            if (evolutionChain !== undefined) {\n                evolution.push(evolutionChain.chain.species.name)\n                if (evolutionChain.chain.evolves_to[0] !== undefined) {\n                    evolution.push(evolutionChain.chain.evolves_to[0].species.name)\n                    if (evolutionChain.chain.evolves_to[0].evolves_to[0] !== undefined) {\n                        evolution.push(evolutionChain.chain.evolves_to[0].evolves_to[0].species.name)\n                    }\n                }\n            } \n\n    return (\n        <div id=\"evolution-chain\">\n            <h3 className=\"mt3 mb1\">Evo Chain:</h3>\n                <ul className=\"list pl0 ma0\">\n                    {\n                        evolution.map((species, i) => {\n                        return <li key={i}>{species}</li>\n                        }) \n                    }\n                </ul>\n        </div>\n        \n    )\n}\n\nexport default EvolutionProfile;","import React from 'react';\n\nconst Genus = ({speciesInfo }) => {\n    \n    const flavorText = speciesInfo.flavor_text_entries.find(o => {\n        return o.version.name === 'y' && o.language.name === 'en'\n    }).flavor_text;\n\n    return (\n        <div id=\"genus\">\n            <h3 className=\"mt3 mb1\">{speciesInfo.genera.find(o => o.language.name === 'en').genus}</h3>\n                <p className=\"mt1\">{flavorText}</p>\n        </div>\n        \n    )\n}\n\nexport default Genus;","import React from 'react';\n\nconst EggGroup = ({ speciesInfo }) => {\n    \n    return (\n        <div id=\"egg-group\">\n            <h3 className=\"mt3 mb1\">Egg Group:</h3>\n                <ul className=\"list pl0 ma0\">\n                    {\n                        speciesInfo.egg_groups.map((eggGroup, i) => {\n                        return <li key={i}>{eggGroup.name}</li>\n                        })\n                    }\n                </ul>\n        </div>\n        \n    )\n}\n\nexport default EggGroup;","import React from 'react';\n\nconst Stats = ({ stats }) => {\n\n    return (\n        <div id=\"stats\">\n            <h3 className=\"mt3 mb1\">Stats:</h3>\n                <ul className=\"list pl0 ma0\">\n                    <li>HP: {stats.find(o => o.stat.name === 'hp').base_stat}</li>\n                    <li>Attack: {stats.find(o => o.stat.name === 'attack').base_stat}</li>\n                    <li>Defense: {stats.find(o => o.stat.name === 'defense').base_stat}</li>\n                    <li>Speed: {stats.find(o => o.stat.name === 'speed').base_stat}</li>\n                    <li>Sp Atk: {stats.find(o => o.stat.name === 'special-attack').base_stat}</li>\n                    <li>Sp Def: {stats.find(o => o.stat.name === 'special-defense').base_stat}</li>\n                </ul>\n        </div>\n        \n    )\n}\n\nexport default Stats;","import React from 'react';\n\nconst Types = ({ types }) => {\n\n    return (\n        <div id=\"types\">\n            <h3 className=\"mt3 mb1\">Type(s):</h3>\n                <ul className=\"list pl0 ma0\">\n                    {\n                        types.map((types, i) => {\n                            return <li key={i}>{types.type.name}</li>\n                        })\n                    }\n                </ul>\n        </div>\n        \n    )\n}\n\nexport default Types;","import React from 'react';\n\nconst Moves = ({ moves }) => {\n\n    return (\n        <div id=\"moves\">\n            <h3 className=\"mt3 mb1\">Level-Up Moves:</h3>\n                <ul className=\"list pl0 ma0\">\n                    {\n                        moves.map((moves, i) => {\n                            if (moves.version_group_details[0].move_learn_method.name === 'level-up') {\n                            return <li key={i}>{moves.move.name}</li>\n                            } else {\n                                return null\n                            }\n                        }) \n                    }\n                </ul>\n        </div>\n        \n    )\n}\n\nexport default Moves;","import React from 'react';\n\nconst Damage = () => {\n\n    return (\n        <div id=\"moves\">\n            <h3 className=\"mt3 mb1\">Damage:</h3>\n                <ul className=\"list pl0 ma0\">\n                    \n                </ul>\n        </div>\n        \n    )\n}\n\nexport default Damage;","import React from 'react';\nimport './Pokeball.css';\n\n\nconst Pokeball = () => {\n    const pokeball = {\n        class: 'fetching'\n    }\n\n    return (\n        <div id=\"pokeball\">\n            <svg\n            className={pokeball.class}\n            viewBox=\"0 0 100 100\"\n            width=\"150\"\n            height=\"150\"\n            >\n            <g transform=\"translate(50 50) scale(0.8)\">\n                <g className=\"stars\" transform=\"scale(0)\">\n                <path\n                    fill=\"#303030\"\n                    stroke=\"#303030\"\n                    strokeWidth=\"3\"\n                    strokeLinejoin=\"round\"\n                    strokeLinecap=\"round\"\n                    d=\"M -50 -50 l 4.5 0 l 2.5 -4.5 l 2.5 4.5 l 4.5 0 l -3.5 3.5 l 1.5 5 l -5 -2.5 l -5 2.5 l 1.5 -5 l -3.5 -3.5\"\n                ></path>\n                <path\n                    fill=\"#303030\"\n                    stroke=\"#303030\"\n                    strokeWidth=\"3\"\n                    strokeLinejoin=\"round\"\n                    strokeLinecap=\"round\"\n                    d=\"M 36 -50 l 4.5 0 l 2.5 -4.5 l 2.5 4.5 l 4.5 0 l -3.5 3.5 l 1.5 5 l -5 -2.5 l -5 2.5 l 1.5 -5 l -3.5 -3.5\"\n                ></path>\n                </g>\n                <g transform=\"translate(0 50)\">\n                <g className=\"gravity\">\n                    <g transform=\"translate(0 -50)\">\n                    <g className=\"ball\" transform=\"scale(1 1)\">\n                        <g className=\"bottom\">\n                        <path\n                            fill=\"#ffffff\"\n                            stroke=\"#303030\"\n                            strokeWidth=\"5\"\n                            d=\"M -47.5 0 a 47.5 47.5 0 0 0 95 0z\"\n                        ></path>\n                        </g>\n                        <g className=\"top\">\n                        <path\n                            fill=\"#f15d5f\"\n                            d=\"M -47.5 0 a 47.5 47.5 0 0 1 95 0\"\n                        ></path>\n                        <path\n                            fill=\"none\"\n                            stroke=\"#ffffff\"\n                            strokeWidth=\"5\"\n                            strokeLinecap=\"round\"\n                            strokeDasharray=\"0 15 9 9 20 100\"\n                            d=\"M -38 -0 a 38 38 0 0 1 76 0\"\n                        ></path>\n                        <path\n                            fill=\"none\"\n                            stroke=\"#303030\"\n                            strokeWidth=\"5\"\n                            d=\"M -47.5 0 a 47.5 47.5 0 0 1 95 0z\"\n                        ></path>\n                        </g>\n\n                        <g className=\"open\" transform=\"scale(1 0)\">\n                        <path\n                            fill=\"#303030\"\n                            stroke=\"#303030\"\n                            strokeWidth=\"5\"\n                            strokeLinejoin=\"round\"\n                            d=\"M -47.5 -10 a 190 190 0 0 1 95 0 a 190 190 0 0 1 -95 0\"\n                        ></path>\n                        <path\n                            fill=\"#303030\"\n                            stroke=\"#303030\"\n                            strokeWidth=\"5\"\n                            strokeLinejoin=\"round\"\n                            d=\"M -47.5 5 a 160 160 0 0 0 95 0 a 180 180 0 0 0 -95 0\"\n                        ></path>\n                        </g>\n\n                        <g className=\"center\">\n                        <circle\n                            fill=\"#ffffff\"\n                            stroke=\"#303030\"\n                            strokeWidth=\"5\"\n                            cx=\"0\"\n                            cy=\"0\"\n                            r=\"12\"\n                        ></circle>\n                        <circle\n                            fill=\"#ffffff\"\n                            stroke=\"#303030\"\n                            strokeWidth=\"3\"\n                            cx=\"0\"\n                            cy=\"0\"\n                            r=\"6\"\n                        ></circle>\n                        <g className=\"inner\" opacity=\"0\">\n                            <circle\n                            fill=\"#f15d5f\"\n                            cx=\"0\"\n                            cy=\"0\"\n                            r=\"4.5\"\n                            ></circle>\n                        </g>\n                        </g>\n                    </g>\n                    </g>\n                </g>\n                </g>\n            </g>\n            </svg>\n        </div>\n    )\n\n}\n\nexport default Pokeball;","import React, { Component } from 'react';\nimport GenderRatio from './GenderRatio';\nimport SpeciesProfile from './SpeciesProfile';\nimport EvolutionChain from './EvolutionChain';\nimport Genus from './Genus';\nimport EggGroup from './EggGroup';\nimport Stats from './Stats';\nimport Types from './Types';\nimport Moves from './Moves';\nimport Damage from './Damage';\nimport Pokeball from './Pokeball';\n\nclass PokemonDetail extends Component {\n    \n    constructor() {\n        super() \n        this.state = {\n            pokemon: [], \n            species: [],\n            speciesInfo: [],\n            genderInfo: [],\n            evolutionChain: [],\n            abilities: [], \n            damage: [],\n            moves: [],\n            stats: [],\n            types: [],\n            isLoading: true\n        }\n    }\n\n    async componentDidMount() {\n\n        const detailResponse = await fetch(`${this.props.pokemonDetail.url}`);\n        const detailJson = await detailResponse.json();\n        \n\n        this.setState({\n            pokemon: detailJson, \n            species: detailJson.species,\n            abilities: detailJson.abilities, \n            moves: detailJson.moves,\n            stats: detailJson.stats,\n            types: detailJson.types\n        })\n\n        await this.getSpeciesInfo();\n        await this.getGenderInfo();\n        await this.getEvolutionChainInfo();\n        await this.getDamageInfo();\n    }\n\n    getSpeciesInfo = async () => {\n        const speciesResponse = await fetch(`${this.state.species.url}`);\n        const speciesJson = await speciesResponse.json();\n        this.setState({speciesInfo: speciesJson})\n    }\n\n    getGenderInfo = async () => {\n        const femaleResponse = await fetch(`https://pokeapi.co/api/v2/gender/1`);\n        const femaleJson = await femaleResponse.json();\n        \n        let gender = femaleJson.pokemon_species_details.find(o => {\n            return o.pokemon_species.name === this.state.pokemon.name\n        });\n\n        if (!gender) {\n            const maleResponse = await fetch(`https://pokeapi.co/api/v2/gender/2`);\n            const maleJson = await maleResponse.json();\n\n            gender = maleJson.pokemon_species_details.find(o => {\n                return o.pokemon_species.name === this.state.pokemon.name\n            });\n        }\n\n        if (!gender) {\n            const genderlessResponse = await fetch(`https://pokeapi.co/api/v2/gender/3`);\n            const genderlessJson = await genderlessResponse.json();\n\n            gender = genderlessJson.pokemon_species_details.find(o => {\n                return o.pokemon_species.name === this.state.pokemon.name\n            });\n        }\n\n        this.setState({genderInfo: gender})\n    }\n\n    getEvolutionChainInfo = async () => {\n        const evoChainResponse = await fetch(`${this.state.speciesInfo.evolution_chain.url}`);\n        const evoChainJson = await evoChainResponse.json();\n        this.setState({evolutionChain: evoChainJson })\n    }\n\n    getDamageInfo = async () => {\n        const damageUrls = [];\n\n        this.state.types.forEach(async (type) => {\n            damageUrls.push(type.type.url);\n        })\n\n        Promise.all(damageUrls.map(url => {\n            return fetch(url).then(damageResponse => damageResponse.json())\n        })).then(damageResults => {\n            this.setState({ damage: damageResults, isLoading: false });\n        }).catch((err) => console.log(err))\n        \n    }\n\n    render() {\n\n        if (this.state.isLoading) {\n            return <Pokeball />\n        } \n        else {\n            const { \n                pokemon, \n                speciesInfo, \n                genderInfo,\n                evolutionChain, \n                abilities, \n                moves, \n                stats,\n                damage, \n                types, \n            } = this.state;\n            const { \n                name, \n                base_experience, \n                height, \n                weight, \n                id \n            } = pokemon;\n            \n            return (\n                <div className=\"mw6 center pa3 tc bg-lightest-blue br2 pa1 ma2 bw2 shadow-5\">\n                    <button onClick={() => this.props.onRouteChange('home')}>Home</button>\n                    \n                    <h1>{name}</h1>\n                    <img src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${id}.png`} alt={name} />\n\n                    <Types types={types}/>\n\n                    <Genus speciesInfo={speciesInfo}/>\n\n                    <Stats stats={stats}/>\n\n                    <GenderRatio genderInfo={genderInfo} name={name} />\n\n                    <SpeciesProfile\n                        speciesInfo={speciesInfo}\n                        height={height} \n                        weight={weight} \n                        base_experience={base_experience} />\n\n                    <Damage damage={damage}/>\n\n                    \n                    <EggGroup speciesInfo={speciesInfo}/>\n\n                    <EvolutionChain evolutionChain={evolutionChain}/>\n\n                    <Moves moves={moves}/>\n                    \n                </div>\n            )\n        }\n    }   \n        \n}\n\nexport default PokemonDetail;\n","import React, { Component } from 'react';\nimport './App.css';\nimport PokemonList from './components/PokemonList';\nimport PokemonDetail from './components/PokemonDetail';\nimport Pokeball from './components/Pokeball';\n\nclass App extends Component {\n  \n  constructor() {\n    super();\n    this.state = {\n      isLoading: true,\n      route: 'home',\n      pokemonList: [],\n      pokemonDetail: []\n    }\n  }\n\n  componentDidMount() {\n      this.getPokemonList()\n  }\n  \n  getPokemonList = () => {\n    const ORIGINAL_151 = '151';\n\n    fetch(`https://pokeapi.co/api/v2/pokemon?limit=${ORIGINAL_151}`)\n      .then(response => response.json()) \n      .then(pokemon => {\n        this.setState({ pokemonList: pokemon.results, isLoading: false });\n      })\n      .catch(console.log)\n  }\n\n  getPokemonInfo = (url) => {\n    fetch(`${url}`)\n    .then(response => response.json)\n    .then(data => this.setState({ pokemon: data }))\n  } \n\n  onRouteChange = (route) => {\n    this.setState({route})\n  }\n\n  onPokemonDetail = (pokemon) => {\n    \n    this.setState({ pokemonDetail: pokemon })\n  }\n\n  render() {\n    \n    if (this.state.isLoading) {\n      return <Pokeball />\n    } else if (this.state.route === 'home') {\n      return (\n        <div className=\"App\">\n          <header> \n            <h1 className=\"tc ttc\">pokedex app</h1>\n          </header>\n          {/* TODO: add search field input */}\n          <PokemonList \n            pokemonList={this.state.pokemonList}\n            onRouteChange={this.onRouteChange}\n            onPokemonDetail ={this.onPokemonDetail}/>\n        </div>\n      );\n    } else if (this.state.route === 'detail') {\n      return (\n        <section className=\"\">\n          <PokemonDetail \n            pokemonDetail={this.state.pokemonDetail}\n            onRouteChange={this.onRouteChange} />\n        </section>\n      )\n            \n    }\n    \n  }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'tachyons';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}