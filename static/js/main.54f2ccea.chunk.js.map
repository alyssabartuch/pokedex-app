{"version":3,"sources":["components/PokemonCard.js","components/PokemonList.js","components/GenderRatio.js","components/SpeciesProfile.js","components/EvolutionChain.js","components/Genus.js","components/EggGroup.js","components/Stats.js","components/Types.js","components/Moves.js","helpers/getDamageFrom.js","helpers/getDamageTo.js","components/Damage.js","components/Pokeball.js","components/Abilities.js","components/PokemonDetail.js","components/SearchBox.js","App.js","serviceWorker.js","index.js"],"names":["PokemonCard","pokemonInfo","onRouteChange","onPokemonDetail","name","id","url","trim","split","className","onClick","pokemon","handleClick","src","alt","PokemonList","pokemonList","map","i","key","GenderRatio","genderInfo","genderRatio","rate","male","female","getRatio","SpeciesProfile","speciesInfo","height","weight","base_experience","toFixed","capture_rate","base_happiness","color","hatch_counter","growth_rate","habitat","EvolutionProfile","evolutionChain","evolution","undefined","push","chain","species","evolves_to","Genus","flavorText","flavor_text_entries","find","o","version","language","flavor_text","genera","genus","EggGroup","egg_groups","eggGroup","Stats","stats","stat","base_stat","Types","types","type","Moves","moves","version_group_details","move_learn_method","move","getDamageFrom","damage","runSwitch","damageFromTypes","bug","dragon","electric","fairy","fighting","fire","flying","ghost","grass","ground","ice","normal","poison","psychic","rock","steel","water","doubleDamageFrom","halfDamageFrom","noDamageFrom","forEach","damage_relations","double_damage_from","ddf","includes","half_damage_from","hdf","no_damage_from","ndf","getDamageTo","damageToTypes","doubleDamageTo","halfDamageTo","noDamageTo","double_damage_to","ddt","half_damage_to","hdt","no_damage_to","ndt","Damage","damageCategory","damageType","multiplier","getFraction","fraction","len","toString","length","denominator","Math","pow","numerator","divisor","gcd","a","b","floor","Pokeball","viewBox","width","transform","fill","stroke","strokeWidth","strokeLinejoin","strokeLinecap","d","strokeDasharray","cx","cy","r","opacity","Abilities","abilities","ability","PokemonDetail","getSpeciesJson","fetch","speciesResponse","json","speciesJson","getGenderJson","femaleResponse","femaleJson","gender","pokemon_species_details","pokemon_species","maleResponse","maleJson","genderlessResponse","genderlessJson","getEvolutionChainJson","evoChainResponse","evoChainJson","getDamageJson","urls","promisesArray","damageResults","damageRequest","damageJson","state","isLoading","this","props","pokemonDetail","detailResponse","detailJson","evolution_chain","damageUrls","setState","EvolutionChain","Component","SearchBox","placeholder","App","getPokemonList","then","response","results","catch","console","log","getPokemonInfo","data","route","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.54f2ccea.chunk.js","sourcesContent":["import React from 'react';\nimport '../App.css';\n\nconst PokemonCard = ({ pokemonInfo, onRouteChange, onPokemonDetail }) => {\n\n    const { name, url } = pokemonInfo\n    const id = url.trim().split('/')[6]\n\n    const handleClick = () => {\n        const pokemon = {\n            id: id,\n            name: pokemonInfo.name,\n            url: pokemonInfo.url\n        }\n        \n        onPokemonDetail(pokemon)\n        onRouteChange('detail')\n\n    }\n\n    return (\n        <div className=\"tc w4 bg-lightest-blue dib br2 pa1 ma2 grow bw2 shadow-5\" onClick={() => handleClick()}>\n            <img src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${id}.png`} alt={name}></img>\n            <h3 className=\"ttc\">{name}</h3>\n            \n        </div>\n    )\n    \n}\n\nexport default PokemonCard;\n\n\n","import React from 'react';\nimport PokemonCard from './PokemonCard';\n\nconst PokemonList = ({pokemonList, onRouteChange, onPokemonDetail }) => {\n    \n    return (\n        <div>\n            {\n                pokemonList.map((pokemon, i) => {\n                    return ( \n                        <PokemonCard \n                            pokemonInfo={pokemonList[i]} \n                            key={i}\n                            onRouteChange={onRouteChange}\n                            onPokemonDetail={onPokemonDetail} />\n                    );\n                })\n            }\n\n\n        </div>\n    )\n}\n\n\n\nexport default PokemonList;","import React from 'react';\nimport '../App.css';\n\nconst GenderRatio = ({ genderInfo, name }) => {\n\n    const getRatio = () => {\n        \n        switch(genderInfo.rate) {\n            case -1: \n                return { male: '0%', female: '0%'}\n            case 0: \n                return { male: '100%', female: '0%' }\n            case 1:\n                return { male: '87.5%', female: '12.5%' }\n            case 2: \n                return { male: '75%', female: '25%'}\n            case 4:\n                return { male: '50%', female: '50%' }\n            case 6:\n                return { male: '25%', female: '75%' }\n            case 7: \n                return { male: '12.5%', female: '87.5%' }\n            case 8:\n                return { male: '0%', female: '100%' }\n            default:\n                return { male: '0%', female: '0%' }\n        }\n    }\n    \n    const genderRatio = getRatio()\n\n    return (\n        <div id=\"gender\">\n            <h3 className=\"mt3 mb1\">Gender Ratio:</h3>\n                <div className=\"list pl0 ma0\">\n                    <p className=\"ma0\">{genderRatio.male} <span className=\"male-symbol\">♂</span></p>\n                    <p className=\"ma0\">{genderRatio.female} <span className=\"female-symbol\">♀</span></p>\n                </div>\n        </div>\n    )\n    \n}\n\nexport default GenderRatio;\n","import React from 'react';\n\nconst SpeciesProfile = ({speciesInfo, height, weight, base_experience }) => {\n\n    return (\n        <div id=\"profile\">\n            <h3 className=\"mt3 mb1\">Species Profile:</h3>\n                <ul className=\"list pl0 ma0\">\n                    <li>Height: {(height * .1).toFixed(1)} m</li>\n                    <li>Weight: {(weight * .1).toFixed(1)} kg</li>\n                    <li>Capture Rate: {((speciesInfo.capture_rate / 255) * 100).toFixed(0)}%</li>\n                    <li>Base Exp: {base_experience}</li>\n                    <li>Base Happiness: {speciesInfo.base_happiness}</li>\n                    <li>Color: {speciesInfo.color.name}</li>\n                    <li>Hatch Steps: {255*(speciesInfo.hatch_counter)}</li>\n                    <li>Growtht Rate: {speciesInfo.growth_rate.name}</li>\n                    <li>Habitat: {speciesInfo.habitat.name}</li>\n                </ul>\n        </div>\n        \n    )\n}\n\nexport default SpeciesProfile;","import React from 'react';\n\nconst EvolutionProfile = ({evolutionChain}) => {\n    \n    const evolution = []\n\n            if (evolutionChain !== undefined) {\n                evolution.push(evolutionChain.chain.species.name)\n                if (evolutionChain.chain.evolves_to[0] !== undefined) {\n                    evolution.push(evolutionChain.chain.evolves_to[0].species.name)\n                    if (evolutionChain.chain.evolves_to[0].evolves_to[0] !== undefined) {\n                        evolution.push(evolutionChain.chain.evolves_to[0].evolves_to[0].species.name)\n                    }\n                }\n            } \n\n    return (\n        <div id=\"evolution-chain\">\n            <h3 className=\"mt3 mb1\">Evo Chain:</h3>\n                <ul className=\"list pl0 ma0\">\n                    {\n                        evolution.map((species, i) => {\n                        return <li key={i} className=\"ttc\">{species}</li>\n                        }) \n                    }\n                </ul>\n        </div>\n        \n    )\n}\n\nexport default EvolutionProfile;","import React from 'react';\n\nconst Genus = ({speciesInfo }) => {\n    \n    const flavorText = speciesInfo.flavor_text_entries.find(o => {\n        return o.version.name === 'y' && o.language.name === 'en'\n    }).flavor_text;\n\n    return (\n        <div id=\"genus\">\n            <h3 className=\"mt3 mb1\">{speciesInfo.genera.find(o => o.language.name === 'en').genus}</h3>\n                <p className=\"mt1\">{flavorText}</p>\n        </div>\n        \n    )\n}\n\nexport default Genus;","import React from 'react';\n\nconst EggGroup = ({ speciesInfo }) => {\n    \n    return (\n        <div id=\"egg-group\">\n            <h3 className=\"mt3 mb1\">Egg Group:</h3>\n                <ul className=\"list pl0 ma0\">\n                    {\n                        speciesInfo.egg_groups.map((eggGroup, i) => {\n                        return <li key={i} className=\"ttc\">{eggGroup.name}</li>\n                        })\n                    }\n                </ul>\n        </div>\n        \n    )\n}\n\nexport default EggGroup;","import React from 'react';\n\nconst Stats = ({ stats }) => {\n\n    return (\n        <div id=\"stats\">\n            <h3 className=\"mt3 mb1\">Stats:</h3>\n                <ul className=\"list pl0 ma0\">\n                    <li>HP: {stats.find(o => o.stat.name === 'hp').base_stat}</li>\n                    <li>Attack: {stats.find(o => o.stat.name === 'attack').base_stat}</li>\n                    <li>Defense: {stats.find(o => o.stat.name === 'defense').base_stat}</li>\n                    <li>Speed: {stats.find(o => o.stat.name === 'speed').base_stat}</li>\n                    <li>Sp Atk: {stats.find(o => o.stat.name === 'special-attack').base_stat}</li>\n                    <li>Sp Def: {stats.find(o => o.stat.name === 'special-defense').base_stat}</li>\n                </ul>\n        </div>\n        \n    )\n}\n\nexport default Stats;","import React from 'react';\n\nconst Types = ({ types }) => {\n\n    return (\n        <div id=\"types\">\n            <h3 className=\"mt3 mb1\">Type(s):</h3>\n                <ul className=\"list pl0 ma0\">\n                    {\n                        types.map((types, i) => {\n                            return <li key={i} className=\"ttc\">{types.type.name}</li>\n                        })\n                    }\n                </ul>\n        </div>\n        \n    )\n}\n\nexport default Types;","import React from 'react';\n\nconst Moves = ({ moves }) => {\n\n    return (\n        <div id=\"moves\">\n            <h3 className=\"mt3 mb1\">Level-Up Moves:</h3>\n                <ul className=\"list pl0 ma0\">\n                    {\n                        moves.map((moves, i) => {\n                            if (moves.version_group_details[0].move_learn_method.name === 'level-up') {\n                            return <li key={i} className=\"ttc\">{moves.move.name}</li>\n                            } else {\n                                return null\n                            }\n                        }) \n                    }\n                </ul>\n        </div>\n        \n    )\n}\n\nexport default Moves;","/* eslint-disable no-alert */\nconst getDamageFrom = (damage, runSwitch) => {\n\n    const damageFromTypes = {\n        bug: 1, \n        dragon: 1, \n        electric: 1, \n        fairy: 1, \n        fighting: 1, \n        fire: 1, \n        flying: 1, \n        ghost: 1, \n        grass: 1, \n        ground: 1, \n        ice: 1, \n        normal: 1, \n        poison: 1, \n        psychic: 1, \n        rock: 1, \n        steel: 1, \n        water: 1\n    }\n\n    const doubleDamageFrom = [];\n    const halfDamageFrom = [];\n    const noDamageFrom = [];\n    \n    damage.forEach((damage) => {\n        damage.damage_relations.double_damage_from.forEach((ddf) => {\n            if (!doubleDamageFrom.includes(ddf.name)) {\n                doubleDamageFrom.push(ddf.name);\n                runSwitch(damageFromTypes, ddf.name, 2);\n            }\n        })\n    }) \n\n    damage.forEach((damage) => {\n        damage.damage_relations.half_damage_from.forEach((hdf) => {\n            if (!halfDamageFrom.includes(hdf.name)) {\n                halfDamageFrom.push(hdf.name);\n                runSwitch(damageFromTypes, hdf.name, .5);\n            }\n        })\n    })\n\n    damage.forEach((damage) => {\n        damage.damage_relations.no_damage_from.forEach((ndf) => {\n            if (!noDamageFrom.includes(ndf.name)) {\n                noDamageFrom.push(ndf.name);\n                runSwitch(damageFromTypes, ndf.name, 0);\n            }\n        })\n    })\n\n    return damageFromTypes\n}\n\nexport default getDamageFrom;","/* eslint-disable no-alert */\nconst getDamageTo = (damage, runSwitch) => {\n    \n    const damageToTypes = {\n        bug: 1, \n        dragon: 1, \n        electric: 1, \n        fairy: 1, \n        fighting: 1, \n        fire: 1, \n        flying: 1, \n        ghost: 1, \n        grass: 1, \n        ground: 1, \n        ice: 1, \n        normal: 1, \n        poison: 1, \n        psychic: 1, \n        rock: 1, \n        steel: 1, \n        water: 1\n    }\n\n    const doubleDamageTo = [];\n    const halfDamageTo = [];\n    const noDamageTo = [];\n\n        damage.forEach((damage) => {\n            damage.damage_relations.double_damage_to.forEach((ddt) => {\n                if (!doubleDamageTo.includes(ddt.name)) {\n                    doubleDamageTo.push(ddt.name);\n                    runSwitch(damageToTypes, ddt.name, 2);\n                }\n            })\n        }) \n\n        damage.forEach((damage) => {\n            damage.damage_relations.half_damage_to.forEach((hdt) => {\n                if (!halfDamageTo.includes(hdt.name)) {\n                    halfDamageTo.push(hdt.name);\n                    runSwitch(damageToTypes, hdt.name, .5);\n                }\n            })\n        })\n\n        damage.forEach((damage) => {\n            damage.damage_relations.no_damage_to.forEach((ndt) => {\n                if (!noDamageTo.includes(ndt.name)) {\n                    noDamageTo.push(ndt.name);\n                    runSwitch(damageToTypes, ndt.name, 0);\n                }\n            })\n        }) \n\n        return damageToTypes\n}\n\n\nexport default getDamageTo;\n","import React from 'react';\nimport getDamageFrom from '../helpers/getDamageFrom';\nimport getDamageTo from '../helpers/getDamageTo';\nimport './Damage.css';\n\nconst Damage = ({ damage }) => {\n    \n    const runSwitch = (damageCategory, damageType, multiplier) => {\n        switch(damageType) {\n            case 'bug': \n                damageCategory.bug *= multiplier;\n                break;\n            case 'dragon': \n                damageCategory.dragon *= multiplier;\n                break;\n            case 'electric': \n                damageCategory.electric *= multiplier;\n                break;\n            case 'fairy': \n                damageCategory.fairy *= multiplier;\n                break;\n            case 'fighting': \n                damageCategory.fighting *= multiplier;\n                break;\n            case 'fire': \n                damageCategory.fire *= multiplier;\n                break;\n            case 'flying': \n                damageCategory.flying *= multiplier;\n                break;\n            case 'ghost': \n                damageCategory.ghost *= multiplier;\n                break;\n            case 'grass': \n                damageCategory.grass *= multiplier;\n                break;\n            case 'ground': \n                damageCategory.ground *= multiplier;\n                break;\n            case 'ice': \n                damageCategory.ice *= multiplier;\n                break;\n            case 'normal': \n                damageCategory.normal *= multiplier;\n                break;\n            case 'poison': \n                damageCategory.poison *= multiplier;\n                break;\n            case 'psychic': \n                damageCategory.psychic *= multiplier;\n                break;\n            case 'rock': \n                damageCategory.rock *= multiplier;\n                break;\n            case 'steel': \n                damageCategory.steel *= multiplier;\n                break;\n            case 'water': \n                damageCategory.water *= multiplier;\n                break;\n            default: \n            break;\n        }\n    }\n    const damageFromTypes = getDamageFrom(damage, runSwitch);\n    const damageToTypes = getDamageTo(damage, runSwitch);\n\n\n    const getFraction = fraction => {\n        var gcd = (a, b) => {\n            if (b < 0.0000001) return a;                \n            // Since there is a limited precision we need to limit the value.\n          \n            return gcd(b, Math.floor(a % b));           \n            // Discard any fractions due to limitations in precision.\n        };\n          \n        var len = fraction.toString().length - 2;\n        var denominator = Math.pow(10, len);\n        var numerator = fraction * denominator;\n        var divisor = gcd(numerator, denominator);\n        \n        numerator /= divisor;\n        denominator /= divisor;\n        \n        return (denominator === 1) ? fraction :\n        <span><sup>{Math.floor(numerator)}</sup>/<sub>{Math.floor(denominator)}</sub></span>\n    }\n          \n\n    return (\n        <div id=\"moves\">\n            <h3 className=\"mt3 mb1 tc\">\n                <span className=\"f6\">to</span>\n                <span className=\"right-arrow mr2 ml2\">&#8674;</span>\n                Damage\n                <span className=\"right-arrow mr2 ml2\">&#8674;</span>\n                <span className=\"f6\">from</span>\n            </h3>\n            <div className=\"list pl0 ma0\">\n                <p className=\"ma0\">\n                    {getFraction(damageFromTypes.bug)}\n                    <span className=\"right-arrow mr2 ml2\">&#8674;</span>\n                    <span className=\"f6 dim br-pill ph3 pv2 mb2 dib white bug-color\">bug</span>\n                    <span className=\"right-arrow mr2 ml2\">&#8674;</span>\n                    {getFraction(damageToTypes.bug)}\n                </p>\n                <p className=\"ma0\">\n                    {getFraction(damageFromTypes.dragon)}\n                    <span className=\"right-arrow mr2 ml2\">&#8674;</span>\n                    <span className=\"f6 dim br-pill ph3 pv2 mb2 dib white dragon-color\">dragon</span>\n                    <span className=\"right-arrow mr2 ml2\">&#8674;</span>\n                    {getFraction(damageToTypes.dragon)}\n                </p>\n                <p className=\"ma0\">\n                    {getFraction(damageFromTypes.electric)}\n                    <span className=\"right-arrow mr2 ml2\">&#8674;</span>\n                    <span className=\"f6 dim br-pill ph3 pv2 mb2 dib white electric-color\">electric</span>\n                    <span className=\"right-arrow mr2 ml2\">&#8674;</span>\n                    {getFraction(damageToTypes.electric)}\n                </p>\n                <p className=\"ma0\">\n                    {getFraction(damageFromTypes.fairy)}\n                    <span className=\"right-arrow mr2 ml2\">&#8674;</span>\n                    <span className=\"f6 dim br-pill ph3 pv2 mb2 dib white fairy-color\">fairy</span>\n                    <span className=\"right-arrow mr2 ml2\">&#8674;</span>\n                    {getFraction(damageToTypes.fairy)}\n                </p>\n                <p className=\"ma0\">\n                    {getFraction(damageFromTypes.fighting)}\n                    <span className=\"right-arrow mr2 ml2\">&#8674;</span>\n                    <span className=\"f6 dim br-pill ph3 pv2 mb2 dib white fighting-color\">fighting</span>\n                    <span className=\"right-arrow mr2 ml2\">&#8674;</span>\n                    {getFraction(damageToTypes.fighting)}\n                </p>\n                <p className=\"ma0\">\n                    {getFraction(damageFromTypes.fire)}\n                    <span className=\"right-arrow mr2 ml2\">&#8674;</span>\n                    <span className=\"f6 dim br-pill ph3 pv2 mb2 dib white fire-color\">fire</span>\n                    <span className=\"right-arrow mr2 ml2\">&#8674;</span>\n                    {getFraction(damageToTypes.fire)}\n                </p>\n                <p className=\"ma0\">\n                    {getFraction(damageFromTypes.flying)}\n                    <span className=\"right-arrow mr2 ml2\">&#8674;</span>\n                    <span className=\"f6 dim br-pill ph3 pv2 mb2 dib white flying-color\">flying</span>\n                    <span className=\"right-arrow mr2 ml2\">&#8674;</span>\n                    {getFraction(damageToTypes.flying)}\n                </p>\n                <p className=\"ma0\">\n                    {getFraction(damageFromTypes.ghost)}\n                    <span className=\"right-arrow mr2 ml2\">&#8674;</span>\n                    <span className=\"f6 dim br-pill ph3 pv2 mb2 dib white ghost-color\">ghost</span>\n                    <span className=\"right-arrow mr2 ml2\">&#8674;</span>\n                    {getFraction(damageToTypes.ghost)}\n                </p>\n                <p className=\"ma0\">\n                    {getFraction(damageFromTypes.grass)}\n                    <span className=\"right-arrow mr2 ml2\">&#8674;</span>\n                    <span className=\"f6 dim br-pill ph3 pv2 mb2 dib white grass-color\">grass</span>\n                    <span className=\"right-arrow mr2 ml2\">&#8674;</span>\n                    {getFraction(damageToTypes.grass)}\n                </p>\n                <p className=\"ma0\">\n                    {getFraction(damageFromTypes.ground)}\n                    <span className=\"right-arrow mr2 ml2\">&#8674;</span>\n                    <span className=\"f6 dim br-pill ph3 pv2 mb2 dib white ground-color\">ground</span>\n                    <span className=\"right-arrow mr2 ml2\">&#8674;</span>\n                    {getFraction(damageToTypes.ground)}\n                </p>\n                <p className=\"ma0\">\n                    {getFraction(damageFromTypes.normal)}\n                    <span className=\"right-arrow mr2 ml2\">&#8674;</span>\n                    <span className=\"f6 dim br-pill ph3 pv2 mb2 dib white normal-color\">normal</span>\n                    <span className=\"right-arrow mr2 ml2\">&#8674;</span>\n                    {getFraction(damageToTypes.normal)}\n                </p>\n                <p className=\"ma0\">\n                    {getFraction(damageFromTypes.poison)}\n                    <span className=\"right-arrow mr2 ml2\">&#8674;</span>\n                    <span className=\"f6 dim br-pill ph3 pv2 mb2 dib white poison-color\">poison</span>\n                    <span className=\"right-arrow mr2 ml2\">&#8674;</span>\n                    {getFraction(damageToTypes.poison)}\n                </p>\n                <p className=\"ma0\">\n                    {getFraction(damageFromTypes.psychic)}\n                    <span className=\"right-arrow mr2 ml2\">&#8674;</span>\n                    <span className=\"f6 dim br-pill ph3 pv2 mb2 dib white psychic-color\">psychic</span>\n                    <span className=\"right-arrow mr2 ml2\">&#8674;</span>\n                    {getFraction(damageToTypes.psychic)}\n                </p>\n                <p className=\"ma0\">\n                    {getFraction(damageFromTypes.rock)}\n                    <span className=\"right-arrow mr2 ml2\">&#8674;</span>\n                    <span className=\"f6 dim br-pill ph3 pv2 mb2 dib white rock-color\">rock</span>\n                    <span className=\"right-arrow mr2 ml2\">&#8674;</span>\n                    {getFraction(damageToTypes.rock)}\n                </p>\n                <p className=\"ma0\">\n                    {getFraction(damageFromTypes.steel)}\n                    <span className=\"right-arrow mr2 ml2\">&#8674;</span>\n                    <span className=\"f6 dim br-pill ph3 pv2 mb2 dib white steel-color\">steel</span>\n                    <span className=\"right-arrow mr2 ml2\">&#8674;</span>\n                    {getFraction(damageToTypes.steel)}\n                </p>\n                <p className=\"ma0\">\n                    {getFraction(damageFromTypes.water)}\n                    <span className=\"right-arrow mr2 ml2\">&#8674;</span>\n                    <span className=\"f6 dim br-pill ph3 pv2 mb2 dib white water-color\">water</span>\n                    <span className=\"right-arrow mr2 ml2\">&#8674;</span>\n                    {getFraction(damageToTypes.water)}\n                </p>\n            </div>\n\n\n            \n        </div>\n    )\n}\n\nexport default Damage;","import React from 'react';\nimport './Pokeball.css';\n\n\nconst Pokeball = () => {\n    const pokeball = {\n        class: 'fetching'\n    }\n\n    return (\n        <div id=\"pokeball\">\n            <svg\n            className={pokeball.class}\n            viewBox=\"0 0 100 100\"\n            width=\"150\"\n            height=\"150\"\n            >\n            <g transform=\"translate(50 50) scale(0.8)\">\n                <g className=\"stars\" transform=\"scale(0)\">\n                <path\n                    fill=\"#303030\"\n                    stroke=\"#303030\"\n                    strokeWidth=\"3\"\n                    strokeLinejoin=\"round\"\n                    strokeLinecap=\"round\"\n                    d=\"M -50 -50 l 4.5 0 l 2.5 -4.5 l 2.5 4.5 l 4.5 0 l -3.5 3.5 l 1.5 5 l -5 -2.5 l -5 2.5 l 1.5 -5 l -3.5 -3.5\"\n                ></path>\n                <path\n                    fill=\"#303030\"\n                    stroke=\"#303030\"\n                    strokeWidth=\"3\"\n                    strokeLinejoin=\"round\"\n                    strokeLinecap=\"round\"\n                    d=\"M 36 -50 l 4.5 0 l 2.5 -4.5 l 2.5 4.5 l 4.5 0 l -3.5 3.5 l 1.5 5 l -5 -2.5 l -5 2.5 l 1.5 -5 l -3.5 -3.5\"\n                ></path>\n                </g>\n                <g transform=\"translate(0 50)\">\n                <g className=\"gravity\">\n                    <g transform=\"translate(0 -50)\">\n                    <g className=\"ball\" transform=\"scale(1 1)\">\n                        <g className=\"bottom\">\n                        <path\n                            fill=\"#ffffff\"\n                            stroke=\"#303030\"\n                            strokeWidth=\"5\"\n                            d=\"M -47.5 0 a 47.5 47.5 0 0 0 95 0z\"\n                        ></path>\n                        </g>\n                        <g className=\"top\">\n                        <path\n                            fill=\"#f15d5f\"\n                            d=\"M -47.5 0 a 47.5 47.5 0 0 1 95 0\"\n                        ></path>\n                        <path\n                            fill=\"none\"\n                            stroke=\"#ffffff\"\n                            strokeWidth=\"5\"\n                            strokeLinecap=\"round\"\n                            strokeDasharray=\"0 15 9 9 20 100\"\n                            d=\"M -38 -0 a 38 38 0 0 1 76 0\"\n                        ></path>\n                        <path\n                            fill=\"none\"\n                            stroke=\"#303030\"\n                            strokeWidth=\"5\"\n                            d=\"M -47.5 0 a 47.5 47.5 0 0 1 95 0z\"\n                        ></path>\n                        </g>\n\n                        <g className=\"open\" transform=\"scale(1 0)\">\n                        <path\n                            fill=\"#303030\"\n                            stroke=\"#303030\"\n                            strokeWidth=\"5\"\n                            strokeLinejoin=\"round\"\n                            d=\"M -47.5 -10 a 190 190 0 0 1 95 0 a 190 190 0 0 1 -95 0\"\n                        ></path>\n                        <path\n                            fill=\"#303030\"\n                            stroke=\"#303030\"\n                            strokeWidth=\"5\"\n                            strokeLinejoin=\"round\"\n                            d=\"M -47.5 5 a 160 160 0 0 0 95 0 a 180 180 0 0 0 -95 0\"\n                        ></path>\n                        </g>\n\n                        <g className=\"center\">\n                        <circle\n                            fill=\"#ffffff\"\n                            stroke=\"#303030\"\n                            strokeWidth=\"5\"\n                            cx=\"0\"\n                            cy=\"0\"\n                            r=\"12\"\n                        ></circle>\n                        <circle\n                            fill=\"#ffffff\"\n                            stroke=\"#303030\"\n                            strokeWidth=\"3\"\n                            cx=\"0\"\n                            cy=\"0\"\n                            r=\"6\"\n                        ></circle>\n                        <g className=\"inner\" opacity=\"0\">\n                            <circle\n                            fill=\"#f15d5f\"\n                            cx=\"0\"\n                            cy=\"0\"\n                            r=\"4.5\"\n                            ></circle>\n                        </g>\n                        </g>\n                    </g>\n                    </g>\n                </g>\n                </g>\n            </g>\n            </svg>\n        </div>\n    )\n\n}\n\nexport default Pokeball;","import React from 'react';\n\nconst Abilities = ({abilities}) => {\n\n    return (\n        <div id=\"moves\">\n            <h3 className=\"mt3 mb1\">Abilities:</h3>\n                <ul className=\"list pl0 ma0\">\n                    {\n                        abilities.map((abilities, i) => {\n                            return <li key={i} className=\"ttc\">{abilities.ability.name}</li>\n                        }) \n                    }\n                </ul>\n        </div>\n        \n    )\n}\n\nexport default Abilities;","import React, { Component } from 'react';\nimport GenderRatio from './GenderRatio';\nimport SpeciesProfile from './SpeciesProfile';\nimport EvolutionChain from './EvolutionChain';\nimport Genus from './Genus';\nimport EggGroup from './EggGroup';\nimport Stats from './Stats';\nimport Types from './Types';\nimport Moves from './Moves';\nimport Damage from './Damage';\nimport Pokeball from './Pokeball';\nimport Abilities from './Abilities';\n\nclass PokemonDetail extends Component {\n    \n    constructor() {\n        super() \n        this.state = {\n            pokemon: [], \n            species: [],\n            speciesInfo: [],\n            genderInfo: [],\n            evolutionChain: [],\n            abilities: [], \n            damage: [],\n            moves: [],\n            stats: [],\n            types: [],\n            isLoading: true\n        }\n    }\n\n    async componentDidMount() {\n\n        const detailResponse = await fetch(`${this.props.pokemonDetail.url}`);\n        const detailJson = await detailResponse.json();\n        \n        const speciesJson = await this.getSpeciesJson(detailJson.species.url);\n        const gender = await this.getGenderJson(detailJson.name);\n        const evoChainJson = await this.getEvolutionChainJson(speciesJson.evolution_chain.url);\n\n        const damageUrls = [];\n\n        await detailJson.types.forEach(async (type) => {\n            damageUrls.push(type.type.url);\n        })\n\n        const damageJson = await this.getDamageJson(damageUrls);\n\n        this.setState({\n            pokemon: detailJson, \n            species: detailJson.species,\n            speciesInfo: speciesJson,\n            genderInfo: gender,\n            evolutionChain: evoChainJson,\n            abilities: detailJson.abilities, \n            damage: damageJson,\n            moves: detailJson.moves,\n            stats: detailJson.stats,\n            types: detailJson.types,\n            isLoading: false\n        })\n    }\n\n    getSpeciesJson = async (url) => {\n        const speciesResponse = await fetch(`${url}`);\n        const speciesJson = await speciesResponse.json();\n        return speciesJson\n    }\n\n    getGenderJson = async (name) => {\n        const femaleResponse = await fetch(`https://pokeapi.co/api/v2/gender/1`);\n        const femaleJson = await femaleResponse.json();\n        \n        let gender = femaleJson.pokemon_species_details.find(o => {\n            return o.pokemon_species.name === name\n        });\n\n        if (!gender) {\n            const maleResponse = await fetch(`https://pokeapi.co/api/v2/gender/2`);\n            const maleJson = await maleResponse.json();\n\n            gender = maleJson.pokemon_species_details.find(o => {\n                return o.pokemon_species.name === name\n            });\n        }\n\n        if (!gender) {\n            const genderlessResponse = await fetch(`https://pokeapi.co/api/v2/gender/3`);\n            const genderlessJson = await genderlessResponse.json();\n\n            gender = genderlessJson.pokemon_species_details.find(o => {\n                return o.pokemon_species.name === name\n            });\n        }\n\n        return gender\n    }\n\n    getEvolutionChainJson = async (url) => {\n        const evoChainResponse = await fetch(`${url}`);\n        const evoChainJson = await evoChainResponse.json();\n        return evoChainJson\n    }\n\n    getDamageJson = async (urls) => {\n        const promisesArray = await urls.map(url => fetch(url));\n        const damageResults = [];\n\n        for await (let damageRequest of promisesArray) {\n            const damageJson = await damageRequest.json();\n            damageResults.push(damageJson);\n        }\n        return damageResults\n    }\n\n    render() {\n\n        if (this.state.isLoading) {\n            return <Pokeball />\n        } \n        else {\n            const { \n                pokemon, \n                speciesInfo, \n                genderInfo,\n                evolutionChain, \n                abilities, \n                moves, \n                stats,\n                damage, \n                types, \n            } = this.state;\n            const { \n                name, \n                base_experience, \n                height, \n                weight, \n                id \n            } = pokemon;\n            \n            return (\n                <div className=\"mw6 center pa3 tc bg-lightest-blue br2 pa1 ma2 bw2 shadow-5\">\n                    <button className=\"f6 link dim br3 ph3 pv2 mb2 dib white bg-red\" onClick={() => this.props.onRouteChange('home')}>Home</button>\n\n                    <h1 className=\"ttc\">{name}</h1>\n                    <img src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${id}.png`} alt={name} />\n\n                    <Types types={types}/>\n\n                    <Genus speciesInfo={speciesInfo}/>\n\n                    <Stats stats={stats}/>\n            \n                    <GenderRatio genderInfo={genderInfo} name={name} />\n\n                    <Abilities abilities={abilities}/>\n\n                    <SpeciesProfile\n                        speciesInfo={speciesInfo}\n                        height={height} \n                        weight={weight} \n                        base_experience={base_experience} />\n\n                    <Damage damage={damage}/>\n\n                    \n                    <EggGroup speciesInfo={speciesInfo}/>\n\n                    <EvolutionChain evolutionChain={evolutionChain}/>\n\n                    <Moves moves={moves}/>\n                    \n                </div>\n            )\n        }\n    }   \n        \n}\n\nexport default PokemonDetail;\n","import React from 'react';\n\nconst SearchBox = () => {\n\n  return (\n    <div className='pa2'>\n      <input\n        className='pa3 ba bg-lightest-blue'\n        type='search'\n        placeholder='-under construction-'\n        // onChange={searchChange}\n      />\n    </div>\n  );\n}\n\nexport default SearchBox;","import React, { Component } from 'react';\nimport './App.css';\nimport PokemonList from './components/PokemonList';\nimport PokemonDetail from './components/PokemonDetail';\nimport Pokeball from './components/Pokeball';\nimport SearchBox from './components/SearchBox';\n\nclass App extends Component {\n  \n  constructor() {\n    super();\n    this.state = {\n      isLoading: true,\n      route: 'home',\n      pokemonList: [],\n      pokemonDetail: []\n    }\n  }\n\n  componentDidMount() {\n      this.getPokemonList()\n  }\n  \n  getPokemonList = () => {\n    const ORIGINAL_151 = '151';\n\n    fetch(`https://pokeapi.co/api/v2/pokemon?limit=${ORIGINAL_151}`)\n      .then(response => response.json()) \n      .then(pokemon => {\n        this.setState({ pokemonList: pokemon.results, isLoading: false });\n      })\n      .catch(console.log)\n  }\n\n  getPokemonInfo = (url) => {\n    fetch(`${url}`)\n    .then(response => response.json)\n    .then(data => this.setState({ pokemon: data }))\n  } \n\n  onRouteChange = (route) => {\n    this.setState({route})\n  }\n\n  onPokemonDetail = (pokemon) => {\n    \n    this.setState({ pokemonDetail: pokemon })\n  }\n\n  render() {\n    \n    if (this.state.isLoading) {\n      return <Pokeball />\n    } else if (this.state.route === 'home') {\n      return (\n        <div className=\"App\">\n          <header> \n            <h1 className=\"tc ttc red f-subheadline lh-title mb3\">pokédex app</h1>\n            <SearchBox />\n          </header>\n          {/* TODO: add search field input */}\n          <PokemonList \n            pokemonList={this.state.pokemonList}\n            onRouteChange={this.onRouteChange}\n            onPokemonDetail ={this.onPokemonDetail}/>\n        </div>\n      );\n    } else if (this.state.route === 'detail') {\n      return (\n        <section className=\"\">\n          <PokemonDetail \n            pokemonDetail={this.state.pokemonDetail}\n            onRouteChange={this.onRouteChange} />\n        </section>\n      )\n            \n    }\n    \n  }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'tachyons';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}